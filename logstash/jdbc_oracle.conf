input {
	stdin {
	}
	jdbc {
		#oracle jdbc connection string to our backup databse
		jdbc_connection_string => "jdbc:oracle:thin:@10.18.103.170:1521:orclcdr"
		#the user we wish to excute our statement as
		jdbc_user => "sinosoft_empi_standard_server"
		jdbc_password => "sinosoft"
		#the path to our downloaded jdbc driver
		jdbc_driver_library => "C:\instantclient_11_2\ojdbc6.jar"
		#the name of the driver class for oracle
		jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
		#new add begin 2016 - 6 - 28
		record_last_run => "true"
		use_column_value => "false"
		tracking_column => "id"
		last_run_metadata_path => "D:\linux\logstash\logstash-6.7.0\run_metadata.d\my_info"
		clean_run => "false"
		#new add by end
		jdbc_paging_enabled => "true"
		jdbc_page_size => "50000"
		statement_filepath => "D:\linux\logstash\logstash-6.7.0\bin\logstash_jdbc_test\jdbc.sql"
		#statement => "SELECT ROWNUM rn,TL.* FROM (SELECT * FROM t_config) TL"
		schedule => "* * * * *"
		#设定ES索引类型
		type => "jdbc_config"
	}
	jdbc {
		#oracle jdbc connection string to our backup databse
		jdbc_connection_string => "jdbc:oracle:thin:@10.18.103.170:1521:orclcdr"
		#the user we wish to excute our statement as
		jdbc_user => "sinosoft_empi_standard_server"
		jdbc_password => "sinosoft"
		#the path to our downloaded jdbc driver
		jdbc_driver_library => "C:\instantclient_11_2\ojdbc6.jar"
		#the name of the driver class for oracle
		jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
		#new add begin 2016 - 6 - 28
		record_last_run => "true"
		use_column_value => "false"
		tracking_column => "id"
		last_run_metadata_path => "D:\linux\logstash\logstash-6.7.0\run_metadata.d\my_info"
		clean_run => "false"
		#new add by end
		jdbc_paging_enabled => "true"
		jdbc_page_size => "50000"
		statement_filepath => "D:\linux\logstash\logstash-6.7.0\bin\logstash_jdbc_test\jdbc2.sql"
		#statement => "SELECT ROWNUM rn,TL.ID,TL.NAME,TL.CODE,TL.TYPE as org_type,TL.ADDRESS,TL.REMARK,TL.DATA_STATUS,TL.CREATOR,TL.CREATE_DATE,TL.MODIFY_BY,TL.MODIFY_DATE,TL.VOIDED_BY,TL.VOIDED_DATE FROM (SELECT * FROM t_empi_org) TL"
		schedule => "* * * * *"
		#设定ES索引类型
		type => "jdbc_empi_org"
	}
}

filter {
	json {
		source => "message"
		remove_field => ["message"]
	}
	#grok {
		#match => { "message" => "%{COMBINEDAPACHELOG}" }
		#match => { "message" => "test" }
	#}
	date {
		match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
	}
}

output {
	#elasticsearch {
	#	hosts => "http://10.18.103.43:9200/"
	#	#ES索引名称（自己定义的）
	#	index => "empi"
	#	#自增ID编号
	#	document_id => "%{rn}"
	#	#document_type => "_doc"
	#}
	
	stdout {
		#以JSON格式输出
		codec => json_lines
	}
	
	if[type] == "jdbc_config" {
        elasticsearch {
            hosts => ["http://10.18.103.43:9200/"]
            index => "empi_config"
            document_id => "%{rn}"
        }
    }
    if[type] == "jdbc_empi_org" {
        elasticsearch {
            hosts => ["http://10.18.103.43:9200/"]
            index => "empi_org"
            document_id => "%{rn}"
        }
    }

}